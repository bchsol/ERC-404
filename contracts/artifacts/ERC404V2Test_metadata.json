{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimals_",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "maxTotalSupplyERC721_",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initialOwner_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "initialMintRecipient_",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AirdropAlreadyClaimed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AirdropIsClosed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CannotRemoveFromERC721TransferExempt",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DecimalsTooLow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InsufficientAllowance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidApproval",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidId",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidOperator",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidRecipient",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSender",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSigner",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidSpender",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotEligibleForAirdrop",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotFound",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OwnedIndexOverflow",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PermitDeadlineExpired",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "QueueEmpty",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "QueueFull",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RecipientIsERC721TransferExempt",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SenderIsERC721TransferExempt",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Unauthorized",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "UnsafeRecipient",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "ERC20Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ERC20Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ERC721Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ERC721Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "airdropIsOpen",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "airdropMerkleRoot",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "proof_",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "airdropMint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "valueOrId_",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "erc20BalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc20TotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "erc721BalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc721TokensBankedInQueue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "erc721TotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "erc721TransferExempt",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "hasClaimedAirdrop",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"name": "owned",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "erc721Owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline_",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v_",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r_",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s_",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data_",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "airdropMerkleRoot_",
						"type": "bytes32"
					}
				],
				"name": "setAirdropMerkleRoot",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator_",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved_",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account_",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "value_",
						"type": "bool"
					}
				],
				"name": "setERC721TransferExempt",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "toggleAirdropIsOpen",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id_",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "valueOrId_",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "units",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "proof_",
						"type": "bytes32[]"
					},
					{
						"internalType": "address",
						"name": "claimer_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value_",
						"type": "uint256"
					}
				],
				"name": "verifyProof",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"QueueEmpty()": [
					{
						"details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
					}
				],
				"QueueFull()": [
					{
						"details": "A push operation couldn't be completed due to the queue being full."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "This function assumes the operator is attempting to approve an ERC-721      if valueOrId is less than the minted count. Note: Unlike setApprovalForAll,      spender_ must be allowed to be 0x0 so that approval can be revoked."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				},
				"transfer(address,uint256)": {
					"details": "This function assumes the operator is attempting to transfer as ERC-20      given this function is only supported on the ERC-20 interface.       Treats even small amounts that are valid ERC-721 ids as ERC-20s."
				},
				"transferFrom(address,address,uint256)": {
					"details": "This function assumes the operator is attempting to transfer an ERC-721      if valueOrId is less than or equal to current max id."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"notice": "Returns domain initial domain separator, or recomputes if chain id is not equal to initial chain id"
				},
				"approve(address,uint256)": {
					"notice": "Function for token approvals"
				},
				"ownerOf(uint256)": {
					"notice": "Function to find owner of a given ERC-721 token"
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Function for EIP-2612 permits"
				},
				"safeTransferFrom(address,address,uint256)": {
					"notice": "Function for ERC-721 transfers with contract support. This function only supports moving valid ERC-721 ids, as it does not exist on the ERC-20 spec and will revert otherwise."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"notice": "Function for ERC-721 transfers with contract support and callback data. This function only supports moving valid ERC-721 ids, as it does not exist on the ERC-20 spec and will revert otherwise."
				},
				"setApprovalForAll(address,bool)": {
					"notice": "Function for ERC-721 approvals"
				},
				"tokenURI(uint256)": {
					"notice": "tokenURI must be implemented by child contract"
				},
				"transfer(address,uint256)": {
					"notice": "Function for ERC-20 transfers."
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Function for mixed transfers from an operator that may be different than 'from'."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"ERC404V2Test.sol": "ERC404V2Test"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
				"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
			"keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
				"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"@openzeppelin/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
			"license": "MIT",
			"urls": [
				"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
				"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
			]
		},
		"ERC404V2.sol": {
			"keccak256": "0x42a7efec46275220229df30c8fe2fc19d759cc80f09ba0c70f0c009915dd04e6",
			"license": "MIT",
			"urls": [
				"bzz-raw://9d440200c51bbfad4134d4d72441b2d74343c99d255f520ed712df5beb26379d",
				"dweb:/ipfs/QmdzB33Z7HnChXQSEusVRXjD568zK6f58sMi9vFhCWHSpp"
			]
		},
		"ERC404V2Test.sol": {
			"keccak256": "0x315245172aefc91e332157633dccc6b7cb73a69951da2950f1d28eb3890e54dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://0f5918cfbc18e1acd7a613620f8bf5955807fbd3ae20c0892985d1c6da3300ac",
				"dweb:/ipfs/QmRuye8MKMnBhsjK6oKAMH15Lc8PCu7zgNTgmG2vo1YPJy"
			]
		},
		"extensions/ERC404MerkleClaim.sol": {
			"keccak256": "0xdf607abcbf0d6b918d005b329c22a34e8b08f33ea92a1537c2ce27c67d40ca7b",
			"license": "MIT",
			"urls": [
				"bzz-raw://e953c8c7a1b9f1b6b936f420dab72798ce24d99b575fd917c07d829510556855",
				"dweb:/ipfs/QmVj7ZRFVsW6q8rUUnxzzvdBgGijCThc5A2vFAEH46uqTs"
			]
		},
		"extensions/IERC404MerkleClaim.sol": {
			"keccak256": "0xc1b9a7f9be0b22160183150f9c01743579f8b281a0e1679e100ec0766aa44f95",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ec66d5cfedfdd220ffcbbab8c1d95645e4f8e2d560a29f18e1581036f35abb3",
				"dweb:/ipfs/QmQqWdEVoAjsJrAxP7aLybqNAwMAqbEqyrbmc4AJQtPJNk"
			]
		},
		"interfaces/IERC404.sol": {
			"keccak256": "0x17cc15b2dcbef2e47f3dd612547668df290a04b11e5f0248f86137ad3d3e99f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1b3da8ad376996dd5b394d1c6d5839d2b453701c8bd17220265e4998b81ff4c",
				"dweb:/ipfs/QmWzPx3G4qkMYd1SaRKLgqctnQ8rBE45nm8r5LF3xEkHMR"
			]
		},
		"lib/DoubleEndedQueue.sol": {
			"keccak256": "0x675c1509f4d357fbfa18b2f63a79d23f6bf5bbe720282bec509935589af0993c",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a512a681293c313ca6eccaa9c469ac8059960e4043b15db84d3ee9360eae1ee",
				"dweb:/ipfs/QmewUojrzuekajfxN15UmNrPYGgVSTSboWFYjdDqTo5Ygq"
			]
		},
		"lib/ERC721Receiver.sol": {
			"keccak256": "0x2bbe1a6190dd9ed92713d67e2ca2b4fa49b766dfa45884a821a6f83f6ac47d84",
			"license": "MIT",
			"urls": [
				"bzz-raw://2f79345c16c6622eee620ab0083435b4048dc65dcc7fd21f2ed9b0265fdc1410",
				"dweb:/ipfs/QmSQVDXw9RCMw2zVHinpgYvp7rdjVkjqXyF3AhzLaWbAME"
			]
		},
		"lib/interfaces/IERC165.sol": {
			"keccak256": "0xfe6fb794d173115319cfdbc411f866790d841cd6a58331290e98f88cab21a832",
			"license": "MIT",
			"urls": [
				"bzz-raw://1db54169f9716e6c766333197780c0e75f12ba1d26a6055bce6e79d308917063",
				"dweb:/ipfs/QmSN3YMqygbTWD9jz2Anj5jt7BBwqg4JvvKMD3r2np3gTL"
			]
		}
	},
	"version": 1
}